- name: Set up Kubernetes cluster
  hosts: all
  become: true
  tasks:
    - name: Disable swab
      command: swapoff -a
    - name: Remove swap entry from /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '(^.*swap.*$)'
        replace: '#\1'
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - socat
          - net-tools
        state: present
    - name: Add Kubernetes GPG key
      apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        state: present
        keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    - name: Add Kubernetes repository
      apt_repository:
        repo: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
        state: present
    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - kubernetes-cni
          - containerd
        state: present
        update_cache: yes
    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory
    - name: Generate default containerd configuration
      shell: |
        rm -f /etc/containerd/config.toml
        containerd config default > /etc/containerd/config.toml
    - name: Configure containerd to use systemd as cgroup driver
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'
    - name: Restart containerd service
      service:
        name: containerd
        state: restarted
        enabled: yes
    - name: Configure network settings
      block:
        - name: Enable IP forwarding
          sysctl:
            name: net.ipv4.ip_forward
            value: '1'
            state: present
            reload: yes
        - name: Load bridge module
          modprobe:
            name: bridge
            state: present
        - name: Load br_netfilter module
          modprobe:
            name: br_netfilter
            state: present
        - name: Ensure net.bridge.bridge-nf-call-iptables is set in sysctl.conf
          lineinfile:
            path: /etc/sysctl.conf
            regexp: '^net.bridge.bridge-nf-call-iptables'
            line: 'net.bridge.bridge-nf-call-iptables = 1'
            state: present
        - name: Apply sysctl settings from /etc/sysctl.conf
          command: sysctl -p /etc/sysctl.conf
- name: Initialize Kubernetes master node
  hosts: master
  become: true
  tasks:
    - name: Initialize Kubernetes master node
      register: init_output
      command: kubeadm init
    - name: Create .kube directory
      file:
        path: /root/.kube
        state: directory
        mode: '0755'
    - name: Copy Kubernetes configuration file
      command: "{{ item }}"
      with_items:
        - cp -i /etc/kubernetes/admin.conf ~/.kube/config
    - name: Save the join command to a file
      copy:
        content: "{{ init_output.stdout }}"
        dest: /root/join_command.txt
    - name: Export KUBECONFIG environment variable
      command: echo "export KUBECONFIG=/root/.kube/config" >> /root/.bashrc
    - name: Install Weave Net CNI plugin
      command: kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
- name: Join worker nodes to the cluster
  hosts: workers
  become: true
  tasks:
    - name: Fetch join command from master
      command: cat /root/join_command.txt
      delegate_to: master
      register: join_command
    - name: Join worker nodes to the Kubernetes cluster
      command: "{{ join_command.stdout }}"
...
